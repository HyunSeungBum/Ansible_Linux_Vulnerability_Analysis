#!/usr/bin/python
# -*- coding: utf-8 -*-

from ansible.module_utils.basic import *

if __name__ == '__main__':
    argument_spec = dict(
        system_account = dict(required=True, type='str'),
    )
    module = AnsibleModule(argument_spec=argument_spec, supports_check_mode=True)
    result = { "changed": False}
    account = module.params["system_account"]

    #rc, out, err = module.run_command(["/usr/bin/sudo -Hiu root env | /usr/bin/grep PATH | /usr/bin/awk -F\= '{print $2}'"], check_rc=True, use_unsafe_shell=True)
    rc, out, err = module.run_command(['/usr/bin/sudo', '-Hiu', account, 'env'], check_rc=True, use_unsafe_shell=True)

    if rc > 0:
        result['failed'] = True
        result['msg']  = err
        result['rc'] = rc
        module.fail_json(**result)

    rc2, out2, err2 = module.run_command(['/usr/bin/grep', 'PATH'], data=out, check_rc=True, use_unsafe_shell=True)

    if rc2 > 0:
        result['failed'] = True
        result['msg']  = err2
        result['rc'] = rc
        module.fail_json(**result)

    path = out2.split('=')[1]

    if path[0] is '.':
        result['failed'] = True
        result['msg']  = "%s '.' is in front of PATH environment" % path
        result['rc'] = 1
    else:
        result['msg']  = path
        result['rc'] = 0

    if result.get('failed'):
        module.fail_json(**result)
    else:
        module.exit_json(**result)

if __name__ == '__main__':
    main()
