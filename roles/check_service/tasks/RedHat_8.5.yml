---
- name: check systemd service unnecessary
  tags: chk_unnecessary_service
  block:
  - name: get service facts
    service_facts:

  - name: check if echo.service is installed
    assert:
      that:
        - ansible_facts.services["echo.service"] is undefined
      fail_msg: "echo.service is installed"
      success_msg: "echo.service is not installed"

  - name: check if discard.service is installed
    assert:
      that:
        - ansible_facts.services["discard.service"] is undefined
      fail_msg: "discard.service is installed"
      success_msg: "discard.service is not installed"

  - name: check if daytime.service is installed
    assert:
      that:
        - ansible_facts.services["daytime.service"] is undefined
      fail_msg: "daytime.service is installed"
      success_msg: "daytime.service is not installed"

  - name: check if chargen.service is installed
    assert:
      that:
        - ansible_facts.services["chargen.service"] is undefined
      fail_msg: "chargen.service is installed"
      success_msg: "chargen.service is not installed"

  - name: check if rsh.service is installed
    assert:
      that:
        - ansible_facts.services["rsh.service"] is undefined
      fail_msg: "rsh.service is installed"
      success_msg: "rsh.service is not installed"

  - name: check if rlogin.service is installed
    assert:
      that:
        - ansible_facts.services["rlogin.service"] is undefined
      fail_msg: "rlogin.service is installed"
      success_msg: "rlogin.service is not installed"

  - name: check if rexec.service is installed
    assert:
      that:
        - ansible_facts.services["rexec.service"] is undefined
      fail_msg: "rexec.service is installed"
      success_msg: "rexec.service is not installed"

  - name: check if auth-rpcgss-module.service is installed
    assert:
      that:
        - ansible_facts.services["auth-rpcgss-module.service"] is undefined
      fail_msg: "auth-rpcgss-module.service is installed"
      success_msg: "auth-rpcgss-module.service is not installed"  

  - name: check if nfs-blkmap.service is installed
    assert:
      that:
        - ansible_facts.services["nfs-blkmap.service"] is undefined
      fail_msg: "nfs-blkmap.service is installed"
      success_msg: "nfs-blkmap.service is not installed"  

  - name: check if nfs-convert.service is installed
    assert:
      that:
        - ansible_facts.services["nfs-convert.service"] is undefined
      fail_msg: "nfs-convert.service is installed"
      success_msg: "nfs-convert.service is not installed"

  - name: check if nfs-idmapd.service is installed
    assert:
      that:
        - ansible_facts.services["nfs-idmapd.service"] is undefined
      fail_msg: "nfs-idmapd.service is installed"
      success_msg: "nfs-idmapd.service is not installed"

  - name: check if nfs-mountd.service is installed
    assert:
      that:
        - ansible_facts.services["nfs-mountd.service"] is undefined
      fail_msg: "nfs-mountd.service is installed"
      success_msg: "nfs-mountd.service is not installed"

  - name: check if nfs-server.service is installed
    assert:
      that:
        - ansible_facts.services["nfs-server.service"] is undefined
      fail_msg: "nfs-server.service is installed"
      success_msg: "nfs-server.service is not installed"

  - name: check if nfsdcld.service is installed
    assert:
      that:
        - ansible_facts.services["nfsdcld.service"] is undefined
      fail_msg: "nfsdcld.service is installed"
      success_msg: "nfsdcld.service is not installed"

  - name: check if rpc-gssd.service is installed
    assert:
      that:
        - ansible_facts.services["rpc-gssd.service"] is undefined
      fail_msg: "rpc-gssd.service is installed"
      success_msg: "rpc-gssd.service is not installed"

  - name: check if rpc-statd-notify.service is installed
    assert:
      that:
        - ansible_facts.services["rpc-statd-notify.service"] is undefined
      fail_msg: "rpc-statd-notify.service is installed"
      success_msg: "rpc-statd-notify.service is not installed"

  - name: check if rpc-statd.service is installed
    assert:
      that:
        - ansible_facts.services["rpc-statd.service"] is undefined
      fail_msg: "rpc-statd.service is installed"
      success_msg: "rpc-statd.service is not installed"

  - name: check if autofs.service is installed
    assert:
      that:
        - ansible_facts.services["autofs.service"] is undefined
      fail_msg: "autofs.service is installed"
      success_msg: "autofs.service is not installed"

  - name: check if rpc.cmsd.service is installed
    assert:
      that:
        - ansible_facts.services["rpc.cmsd.service"] is undefined
      fail_msg: "rpc.cmsd.service is installed"
      success_msg: "rpc.cmsd.service is not installed"

  - name: check if rpc.ttdbserverd.service is installed
    assert:
      that:
        - ansible_facts.services["rpc.ttdbserverd.service"] is undefined
      fail_msg: "rpc.ttdbserverd.service is installed"
      success_msg: "rpc.ttdbserverd.service is not installed"

  - name: check if sadmind.service is installed
    assert:
      that:
        - ansible_facts.services["sadmind.service"] is undefined
      fail_msg: "sadmind.service is installed"
      success_msg: "sadmind.service is not installed"

  - name: check if rpcbind.service is installed
    assert:
      that:
        - ansible_facts.services["rpcbind.service"] is undefined
      fail_msg: "rpcbind.service is installed"
      success_msg: "rpcbind.service is not installed"

  - name: check if ypserv.service is installed
    assert:
      that:
        - ansible_facts.services["ypserv.service"] is undefined
      fail_msg: "ypserv.service is installed"
      success_msg: "ypserv.service is not installed"

  - name: check if ypxfrd.service is installed
    assert:
      that:
        - ansible_facts.services["ypxfrd.service"] is undefined
      fail_msg: "ypxfrd.service is installed"
      success_msg: "ypxfrd.service is not installed"

  - name: check if yppasswdd.service is installed
    assert:
      that:
        - ansible_facts.services["yppasswdd.service"] is undefined
      fail_msg: "yppasswdd.service is installed"
      success_msg: "yppasswdd.service is not installed"

  - name: check if sendmail.service is installed
    assert:
      that:
        - ansible_facts.services["sendmail.service"] is undefined
      fail_msg: "sendmail.service is installed"
      success_msg: "sendmail.service is not installed"

  - name: check if named.service is installed
    assert:
      that:
        - ansible_facts.services["named.service"] is undefined
      fail_msg: "named.service is installed"
      success_msg: "named.service is not installed"

  - name: check if snmpd.service is installed
    assert:
      that:
        - ansible_facts.services["snmpd.service"] is undefined
      fail_msg: "snmpd.service is installed"
      success_msg: "snmpd.service is not installed"

  - name: check if snmptrapd.service is installed
    assert:
      that:
        - ansible_facts.services["snmptrapd.service"] is undefined
      fail_msg: "snmptrapd.service is installed"
      success_msg: "snmptrapd.service is not installed"